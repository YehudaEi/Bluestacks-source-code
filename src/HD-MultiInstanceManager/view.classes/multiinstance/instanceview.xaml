<bluestacksCore:UiUserControlBase x:Class="MultiInstanceManagerMVVM.View.Classes.MultiInstance.InstanceView"
                                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                                  xmlns:local="clr-namespace:MultiInstanceManagerMVVM.View.Classes.MultiInstance"
                                  xmlns:bluestacksCore="clr-namespace:BlueStacks.Core;assembly=BlueStacks.Core"
                                  xmlns:Common="clr-namespace:BlueStacks.Common;assembly=HD-Common"
                                  xmlns:helper="clr-namespace:MultiInstanceManagerMVVM.Helper"
                                  xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                                  xmlns:command="http://www.galasoft.ch/mvvmlight"
                                  Loaded="InstanceView_Loaded" Height="50" FocusVisualStyle="{x:Null}"
                                  Visibility="{Binding InstanceViewVisibility, Mode=TwoWay, Converter={StaticResource booleanToVisibilityConverter}}"
                                  Background="{Binding InstanceIndex, Converter={StaticResource IndexToBackgroundConverter}}">
  <i:Interaction.Triggers>
    <i:EventTrigger EventName="MouseEnter">
      <command:EventToCommand Command="{Binding InstanceViewMouseEnterCommand}"/>
    </i:EventTrigger>
    <i:EventTrigger EventName="MouseLeave">
      <command:EventToCommand Command="{Binding InstanceViewMouseLeaveCommand}"/>
    </i:EventTrigger>
  </i:Interaction.Triggers>
  <Border x:Name="mMainBorder" BorderBrush="Transparent" BorderThickness="1">
    <FrameworkElement.Style>
      <Style TargetType="{x:Type Border}">
        <Setter Property="Border.Background" Value="Transparent"/>
        <Style.Triggers>
          <Trigger Property="UIElement.IsMouseOver" Value="true">
            <Setter Property="Border.Background"
                    Value="{Binding Path=ColorModel.[ContextMenuItemBackgroundHoverColor]}"/>
          </Trigger>
          <DataTrigger Binding="{Binding RedDotVisibility}" Value="true">
            <Setter Property="Border.Background"
                    Value="{Binding Path=ColorModel.[ContextMenuItemBackgroundHoverColor]}"/>
          </DataTrigger>
        </Style.Triggers>
      </Style>
    </FrameworkElement.Style>
    <Grid Margin="15,0,15,0">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <FrameworkElement.Style>
        <Style>
          <Style.Triggers>
            <DataTrigger Binding="{Binding SetFocusOnInstanceName}" Value="True">
              <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=mInstanceName}"/>
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </FrameworkElement.Style>
      <Common:CustomCheckbox x:Name="mInstanceCheckbox" Grid.Column="0" Height="16" Width="20" VerticalAlignment="Center"
                             IsChecked="{Binding InstanceCheckBoxChecked, Mode=TwoWay}">
        <i:Interaction.Triggers>
          <i:EventTrigger EventName="Checked">
            <command:EventToCommand Command="{Binding InstanceCheckedCommand}"/>
          </i:EventTrigger>
          <i:EventTrigger EventName="Unchecked">
            <command:EventToCommand Command="{Binding InstanceUnCheckedCommand}"/>
          </i:EventTrigger>
        </i:Interaction.Triggers>
      </Common:CustomCheckbox>
      <Common:CustomTextBox x:Name="mInstanceName" Grid.Column="1" Width="140" VerticalAlignment="Center"
                            HorizontalAlignment="Left" Margin="10,0,0,0"
                            IsReadOnly="{Binding ReadOnlyInstanceName, Mode=TwoWay}" Text="{Binding InstanceName, Mode=TwoWay}">
        <i:Interaction.Triggers>
          <i:EventTrigger EventName="LostFocus">
            <command:EventToCommand Command="{Binding InstanceNameLostFocusCommand}"/>
          </i:EventTrigger>
          <i:EventTrigger EventName="KeyDown">
            <command:EventToCommand PassEventArgsToCommand="true" Command="{Binding InstanceNameKeyDownCommand}"/>
          </i:EventTrigger>
          <i:EventTrigger EventName="PreviewLostKeyboardFocus">
            <command:EventToCommand Command="{Binding InstanceNameLostKeyboardFocusCommand}"/>
          </i:EventTrigger>
        </i:Interaction.Triggers>
        <i:Interaction.Behaviors>
          <bluestacksCore:TextBoxEnterKeyUpdateBehavior/>
        </i:Interaction.Behaviors>
      </Common:CustomTextBox>
      <Common:CustomPictureBox Grid.Column="1" ImageName="red_dot_icon" Width="8" Height="8" Margin="0,10,10,0"
                               VerticalAlignment="Top" HorizontalAlignment="Right" Focusable="false"
                               Visibility="{Binding RedDotVisibility, Mode=TwoWay, Converter={StaticResource BooleanToHiddenVisibilityConverter}}"/>
      <Common:CustomPictureBox Grid.Column="2" Width="14" Height="14" VerticalAlignment="Center" HorizontalAlignment="Right"
                               Margin="4,0,0,0" ImageName="{Binding EditInstanceImage}"
                               Visibility="{Binding EditInstanceVisibility, Mode=TwoWay, Converter={StaticResource BooleanToHiddenVisibilityConverter}}"
                               ToolTip="{Binding IsChildInstance, Converter={StaticResource booleanToLocalizedStringConverter}, ConverterParameter=STRING_RENAME|STRING_CANT_EDIT}">
        <i:Interaction.Triggers>
          <i:EventTrigger EventName="MouseDown">
            <command:EventToCommand PassEventArgsToCommand="true" Command="{Binding EditInstanceClickCommand}"/>
          </i:EventTrigger>
        </i:Interaction.Triggers>
      </Common:CustomPictureBox>
      <TextBlock x:Name="mEngineName" Grid.Column="3" Width="140" TextTrimming="CharacterEllipsis"
                 VerticalAlignment="Center" FontSize="14" Margin="20,0,0,0" ToolTip="{Binding EngineName}"
                 Text="{Binding EngineName}"
                 Foreground="{Binding Path=ColorModel.[ContextMenuItemForegroundDimDimColor]}"/>
      <TextBlock Grid.Column="4" VerticalAlignment="Center" TextTrimming="CharacterEllipsis" FontSize="14"
                 Margin="10,0,20,0"
                 Visibility="{Binding StatusTextVisibility, Converter={StaticResource booleanToVisibilityConverter}}"
                 Text="{Binding StatusText, Mode=TwoWay, FallbackValue=Stopped}"
                 ToolTip="{Binding StatusText, Mode=TwoWay, FallbackValue=Stopped}"
                 Foreground="{Binding Path=ColorModel.[ContextMenuItemForegroundDimDimColor]}"/>
      <local:ProgressBarControl x:Name="mUpdateDownloadProgressBar" Grid.Column="4" Grid.ColumnSpan="3" Margin="10,0,0,0"
                                Height="30"
                                Visibility="{Binding ProgressBarVisibility, Converter={StaticResource booleanToVisibilityConverter}}"/>
      <StackPanel Grid.Column="5" VerticalAlignment="Center" Orientation="Horizontal"
                  Visibility="{Binding OptionPanelVisibility, Mode=TwoWay, Converter={StaticResource booleanToVisibilityConverter}}">
        <Common:CustomPictureBox Height="16" Width="16" ImageName="settings_instance_manager"
                                 ToolTip="{Binding Path=LocaleModel.[STRING_INSTANCE_SETTINGS], FallbackValue='Instance settings'}">
          <i:Interaction.Triggers>
            <i:EventTrigger EventName="MouseLeftButtonUp">
              <command:EventToCommand Command="{Binding SettingsClickCommand}"/>
            </i:EventTrigger>
          </i:Interaction.Triggers>
        </Common:CustomPictureBox>
        <Common:CustomPictureBox Height="16" Width="16" Margin="8,0,0,0" ImageName="shortcut"
                                 ToolTip="{Binding Path=LocaleModel.[STRING_CREATE_DESKTOP_SHORTCUT], FallbackValue='Create desktop shortcut'}">
          <i:Interaction.Triggers>
            <i:EventTrigger EventName="MouseLeftButtonUp">
              <command:EventToCommand Command="{Binding AddInstanceShortCutCommand}"/>
            </i:EventTrigger>
          </i:Interaction.Triggers>
        </Common:CustomPictureBox>
        <Common:CustomPictureBox Height="16" Width="16" Margin="8,0,0,0" ImageName="disk_cleanup"
                                 ToolTip="{Binding Path=LocaleModel.[STRING_DISK_CLEANUP], FallbackValue='Disk cleanup'}">
          <i:Interaction.Triggers>
            <i:EventTrigger EventName="MouseLeftButtonUp">
              <command:EventToCommand Command="{Binding DiskCleanUpClickCommand}"/>
            </i:EventTrigger>
          </i:Interaction.Triggers>
        </Common:CustomPictureBox>
        <Common:CustomPictureBox Height="16" Width="16" Margin="8,0,0,0" ImageName="duplicate"
                                 ToolTip="{Binding Path=LocaleModel.[STRING_CLONE_INSTANCE], FallbackValue='Clone instance'}">
          <i:Interaction.Triggers>
            <i:EventTrigger EventName="MouseLeftButtonUp">
              <command:EventToCommand Command="{Binding CloneInstanceClickCommand}"/>
            </i:EventTrigger>
          </i:Interaction.Triggers>
        </Common:CustomPictureBox>
        <Common:CustomPictureBox Height="16" Width="16" Margin="8,0,0,0"
                                 ImageName="{Binding IsChildInstance, Converter={StaticResource BooleanToImageNameConverter}, ConverterParameter=delete|UnBin}"
                                 ToolTip="{Binding IsChildInstance, Converter={StaticResource booleanToLocalizedStringConverter}, ConverterParameter=STRING_DELETE|STRING_CANT_DELETE}">
          <i:Interaction.Triggers>
            <i:EventTrigger EventName="MouseLeftButtonDown">
              <command:EventToCommand Command="{Binding DeleteInstanceClickCommand}"/>
            </i:EventTrigger>
          </i:Interaction.Triggers>
        </Common:CustomPictureBox>
      </StackPanel>
      <Common:CustomButton Grid.Column="6" Height="24" FontSize="12" Width="70" VerticalAlignment="Center" Margin="20,0,0,0"
                           Content="{Binding Path=LocaleModel.[STRING_START], FallbackValue=Start}"
                           Visibility="{Binding StartButtonVisibility, Mode=TwoWay, Converter={StaticResource booleanToVisibilityConverter}}"
                           Command="{Binding StartButtonClickCommand}"/>
      <Common:CustomButton Grid.Column="7" Height="24" FontSize="12" Width="70" VerticalAlignment="Center" ButtonColor="White"
                           Margin="20,0,0,0" Content="{Binding Path=LocaleModel.[STRING_STOP], FallbackValue=Stop}"
                           Visibility="{Binding StopButtonVisibility, Mode=TwoWay, Converter={StaticResource booleanToVisibilityConverter}}"
                           Command="{Binding StopButtonClickCommand}"/>
    </Grid>
  </Border>
</bluestacksCore:UiUserControlBase>