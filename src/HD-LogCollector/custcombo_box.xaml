<ComboBox x:Class="BlueStacks.LogCollector.CustCombo_box"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
          xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
          xmlns:local="clr-namespace:BlueStacks.LogCollector"
          xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
          Name="_this" SelectedIndex="0" Style="{DynamicResource ComboBoxStyle1}"
          ItemContainerStyle="{DynamicResource comboboxitemstyle}">
  <FrameworkElement.Resources>
    <Style x:Key="ComboBoxFocusVisual">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate>
            <Rectangle Margin="4,4,21,4" SnapsToDevicePixels="true" Stroke="#30385f" StrokeThickness="1"
                       StrokeDashArray="1 2"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
      <GradientStop Color="#262c4b" Offset="0"/>
      <GradientStop Color="#262c4b" Offset="0.5"/>
      <GradientStop Color="#262c4b" Offset="0.5"/>
      <GradientStop Color="#262c4b" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonNormalBorder" Color="#262c4b"/>
    <Geometry x:Key="DownArrowGeometry">M 0 0 L 4 5 L 8 0 Z</Geometry>
    <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="Control.IsTabStop" Value="false"/>
      <Setter Property="UIElement.Focusable" Value="false"/>
      <Setter Property="ButtonBase.ClickMode" Value="Press"/>
      <Setter Property="Control.Background" Value="Transparent"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ToggleButton}">
            <Border x:Name="Chrome" BorderThickness="1" Background="#262c4b" SnapsToDevicePixels="true"
                    DataContext="{Binding ElementName=_this}" BorderBrush="{Binding Path=BorderBrushName}">
              <Grid HorizontalAlignment="Right">
                <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="White" HorizontalAlignment="Center"
                      Margin="3,1,12,0" VerticalAlignment="Center"/>
              </Grid>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="ToggleButton.IsChecked" Value="true"/>
              <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter TargetName="Arrow" Property="Shape.Fill" Value="#AFAFAF"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
      <GradientStop Color="#262c4b" Offset="0.05"/>
      <GradientStop Color="#262c4b" Offset="0.07"/>
      <GradientStop Color="#262c4b" Offset="1"/>
    </LinearGradientBrush>
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="UIElement.AllowDrop" Value="true"/>
      <Setter Property="FrameworkElement.MinWidth" Value="0"/>
      <Setter Property="FrameworkElement.MinHeight" Value="0"/>
      <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TextBox}">
            <ScrollViewer x:Name="PART_ContentHost" Background="#262c4b" Focusable="false"
                          HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="Control.IsTabStop" Value="false"/>
      <Setter Property="UIElement.Focusable" Value="false"/>
      <Setter Property="ButtonBase.ClickMode" Value="Press"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ToggleButton}">
            <Themes:ButtonChrome x:Name="Chrome" Background="{TemplateBinding Control.Background}"
                                 RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                                 RenderPressed="{TemplateBinding ButtonBase.IsPressed}" RoundCorners="false"
                                 UIElement.SnapsToDevicePixels="true"
                                 FrameworkElement.Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
              <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="White" HorizontalAlignment="Center"
                    Margin="0,1,0,0" VerticalAlignment="Center"/>
            </Themes:ButtonChrome>
            <ControlTemplate.Triggers>
              <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Chrome" Property="Themes:ButtonChrome.RenderPressed" Value="true"/>
              </Trigger>
              <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter TargetName="Arrow" Property="Shape.Fill" Value="#AFAFAF"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
      <Grid x:Name="Placement" SnapsToDevicePixels="true">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2"
               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
               Placement="Bottom"
               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
          <Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent"
                                         FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                         FrameworkElement.MinWidth="{Binding ActualWidth, ElementName=Placement}">
            <Border x:Name="DropDownBorder" BorderBrush="#99a9cf" Background="#262c4b" BorderThickness="1">
              <ScrollViewer>
                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
              </ScrollViewer>
            </Border>
          </Themes:SystemDropShadowChrome>
        </Popup>
        <Themes:ListBoxChrome x:Name="Border" BorderBrush="#99a9cf" Background="#262c4b" BorderThickness="1" Grid.ColumnSpan="2"
                              RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                              RenderFocused="{TemplateBinding UIElement.IsKeyboardFocusWithin}"/>
        <TextBox x:Name="PART_EditableTextBox"
                 HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                 Margin="{TemplateBinding Control.Padding}" Style="{StaticResource ComboBoxEditableTextBox}"
                 VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"/>
        <ToggleButton Grid.Column="1" Style="{StaticResource ComboBoxToggleButton}"
                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
      </Grid>
      <ControlTemplate.Triggers>
        <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="true">
          <Setter Property="Control.Foreground" Value="#ffffff"/>
        </Trigger>
        <Trigger Property="ComboBox.IsDropDownOpen" Value="true">
          <Setter TargetName="Border" Property="Themes:ListBoxChrome.RenderFocused" Value="true"/>
        </Trigger>
        <Trigger Property="ItemsControl.HasItems" Value="false">
          <Setter TargetName="DropDownBorder" Property="FrameworkElement.Height" Value="95"/>
        </Trigger>
        <Trigger Property="UIElement.IsEnabled" Value="false">
          <Setter Property="Control.Foreground" Value="#ffffff"/>
          <Setter Property="Control.Background" Value="#262c4b"/>
        </Trigger>
        <Trigger Property="ItemsControl.IsGrouping" Value="true">
          <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
        </Trigger>
        <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
          <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
          <Setter TargetName="Shdw" Property="Themes:SystemDropShadowChrome.Color" Value="#000000"/>
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
      <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}"/>
      <Setter Property="Control.Foreground" Value="#ffffff"/>
      <Setter Property="Control.Background" Value="#262c4b"/>
      <Setter Property="Control.BorderBrush" Value="#99a9cf"/>
      <Setter Property="Control.BorderThickness" Value="1"/>
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
      <Setter Property="Control.Padding" Value="4,3"/>
      <Setter Property="FrameworkElement.ToolTip"
              Value="{Binding Path=SelectedItem.ToolTip, RelativeSource={RelativeSource Self}}"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ComboBox}">
            <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
              </Grid.ColumnDefinitions>
              <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" Margin="1"
                     PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                     Placement="Bottom"
                     IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                <Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent"
                                               FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                               FrameworkElement.MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                  <Border x:Name="DropDownBorder" BorderBrush="#99a9cf" BorderThickness="1,0,1,1" Background="#262c4b">
                    <ScrollViewer CanContentScroll="true" HorizontalScrollBarVisibility="Disabled"
                                  Template="{DynamicResource ScrollViewerControlTemplate1}">
                      <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" Margin="-1,0,-1,0"
                                      MaxWidth="{TemplateBinding FrameworkElement.Width}"
                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                    </ScrollViewer>
                  </Border>
                </Themes:SystemDropShadowChrome>
              </Popup>
              <ToggleButton Background="{TemplateBinding Control.Background}" Grid.ColumnSpan="2"
                            Style="{StaticResource ComboBoxReadonlyToggleButton}"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
              <ContentPresenter ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                                Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsHitTestVisible="false"
                                Margin="8,4,8,4" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,0,0"/>
                <Setter TargetName="Shdw" Property="Themes:SystemDropShadowChrome.Color" Value="#71000000"/>
              </Trigger>
              <Trigger Property="ItemsControl.HasItems" Value="false">
                <Setter TargetName="DropDownBorder" Property="FrameworkElement.Height" Value="95"/>
              </Trigger>
              <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter Property="Control.Foreground" Value="#ffffff"/>
                <Setter Property="Control.Background" Value="#262c4b"/>
              </Trigger>
              <Trigger Property="ItemsControl.IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <Trigger Property="ComboBox.IsEditable" Value="true">
          <Setter Property="Control.BorderBrush" Value="#99a9cf"/>
          <Setter Property="Control.Background" Value="#262c4b"/>
          <Setter Property="Control.IsTabStop" Value="false"/>
          <Setter Property="Control.Padding" Value="3"/>
          <Setter Property="Control.Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
        </Trigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="comboboxitemstyle" TargetType="{x:Type ComboBoxItem}">
      <Setter Property="Control.HorizontalContentAlignment"
              Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
      <Setter Property="Control.VerticalContentAlignment"
              Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
      <Setter Property="Control.Padding" Value="3,0,3,0"/>
      <Setter Property="Control.Foreground" Value="White"/>
      <Setter Property="Control.Background" Value="#262c4b"/>
      <Setter Property="FrameworkElement.MaxWidth"
              Value="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"/>
      <Setter Property="FrameworkElement.MinWidth"
              Value="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"/>
      <Setter Property="FrameworkElement.MaxHeight"
              Value="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"/>
      <Setter Property="FrameworkElement.MinHeight"
              Value="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ComboBoxItem}">
            <Border x:Name="Bd" BorderBrush="#99a9cf" Background="Transparent"
                    Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
              <ContentPresenter x:Name="mContentPresenter" Margin="4,4,4,4"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" IsHitTestVisible="false"
                                VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="ComboBoxItem.IsHighlighted" Value="true">
                <Setter TargetName="Bd" Property="Border.Background" Value="#30385f"/>
                <Setter Property="Control.Foreground" Value="#ffffff"/>
              </Trigger>
              <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter Property="Control.Foreground" Value="#ffffff"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <ControlTemplate x:Key="ScrollViewerControlTemplate1" TargetType="{x:Type ScrollViewer}">
      <Grid x:Name="Grid" Background="{TemplateBinding Control.Background}">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="*"/>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                   Grid.Row="1"/>
        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" CanHorizontallyScroll="false"
                                CanVerticallyScroll="false" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                Content="{TemplateBinding ContentControl.Content}" Grid.Column="0"
                                Margin="{TemplateBinding Control.Padding}" Grid.Row="0"/>
        <ScrollBar x:Name="PART_VerticalScrollBar" HorizontalAlignment="Right"
                   AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1"
                   Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" Minimum="0" Grid.Row="0"
                   Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}"
                   ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                   Style="{DynamicResource ScrollBarStyle1}"
                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
          <FrameworkElement.Resources>
            <LinearGradientBrush x:Key="VerticalScrollBarBackground" EndPoint="1,0" StartPoint="0,0">
              <GradientStop Color="#E1E1E1" Offset="0"/>
              <GradientStop Color="#EDEDED" Offset="0.20"/>
              <GradientStop Color="#EDEDED" Offset="0.80"/>
              <GradientStop Color="#E3E3E3" Offset="1"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#30385f"/>
            <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
              <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
              <Setter Property="UIElement.Focusable" Value="false"/>
              <Setter Property="Control.IsTabStop" Value="false"/>
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                                         RenderPressed="{TemplateBinding ButtonBase.IsPressed}" UIElement.SnapsToDevicePixels="true"
                                         ScrollGlyph="{TemplateBinding Themes:ScrollChrome.ScrollGlyph}"/>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
            <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
              <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
              <Setter Property="Control.Background" Value="Transparent"/>
              <Setter Property="UIElement.Focusable" Value="false"/>
              <Setter Property="Control.IsTabStop" Value="false"/>
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Control.Background}" Height="{TemplateBinding FrameworkElement.Height}"
                               Width="{TemplateBinding FrameworkElement.Width}"/>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
            <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
              <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
              <Setter Property="Control.IsTabStop" Value="false"/>
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Background="#18171E" Width="8" HorizontalAlignment="Right"/>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
            <LinearGradientBrush x:Key="HorizontalScrollBarBackground" EndPoint="0,1" StartPoint="0,0">
              <GradientStop Color="#E1E1E1" Offset="0"/>
              <GradientStop Color="#EDEDED" Offset="0.20"/>
              <GradientStop Color="#EDEDED" Offset="0.80"/>
              <GradientStop Color="#E3E3E3" Offset="1"/>
            </LinearGradientBrush>
            <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
              <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
              <Setter Property="Control.Background" Value="Transparent"/>
              <Setter Property="UIElement.Focusable" Value="false"/>
              <Setter Property="Control.IsTabStop" Value="false"/>
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Control.Background}" Height="{TemplateBinding FrameworkElement.Height}"
                               Width="{TemplateBinding FrameworkElement.Width}"/>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
            <Style x:Key="ScrollBarStyle1" TargetType="{x:Type ScrollBar}">
              <Setter Property="Control.Background" Value="{StaticResource VerticalScrollBarBackground}"/>
              <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
              <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
              <Setter Property="Control.Foreground" Value="#ffffff"/>
              <Setter Property="FrameworkElement.Width"
                      Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
              <Setter Property="FrameworkElement.MinWidth"
                      Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" Background="Transparent" SnapsToDevicePixels="true">
                      <Grid.RowDefinitions>
                        <RowDefinition Height="0.00001*"/>
                      </Grid.RowDefinitions>
                      <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding UIElement.IsMouseOver}"
                             Grid.Row="1">
                        <Track.DecreaseRepeatButton>
                          <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                          <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                        </Track.IncreaseRepeatButton>
                        <Track.Thumb>
                          <Thumb Style="{StaticResource ScrollBarThumb}" ScrollGlyph="VerticalGripper"/>
                        </Track.Thumb>
                      </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                      <Trigger Property="UIElement.IsEnabled" Value="false">
                        <Setter TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}" Property="Panel.Background"/>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
              <Style.Triggers>
                <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
                  <Setter Property="FrameworkElement.Width" Value="Auto"/>
                  <Setter Property="FrameworkElement.MinWidth" Value="0"/>
                  <Setter Property="FrameworkElement.Height"
                          Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                  <Setter Property="FrameworkElement.MinHeight"
                          Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                  <Setter Property="Control.Background" Value="{StaticResource HorizontalScrollBarBackground}"/>
                  <Setter Property="Control.Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                            <ColumnDefinition Width="0.00001*"/>
                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                          </Grid.ColumnDefinitions>
                          <RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding UIElement.IsMouseOver}"
                                        Style="{StaticResource ScrollBarButton}" ScrollGlyph="LeftArrow"/>
                          <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding UIElement.IsMouseOver}">
                            <Track.DecreaseRepeatButton>
                              <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}"
                                            Style="{StaticResource HorizontalScrollBarPageButton}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                              <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}"
                                            Style="{StaticResource HorizontalScrollBarPageButton}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                              <Thumb Style="{StaticResource ScrollBarThumb}" ScrollGlyph="HorizontalGripper"/>
                            </Track.Thumb>
                          </Track>
                          <RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}"
                                        IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Style="{StaticResource ScrollBarButton}"
                                        ScrollGlyph="RightArrow"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                          <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}" Property="Panel.Background"/>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Trigger>
              </Style.Triggers>
            </Style>
          </FrameworkElement.Resources>
        </ScrollBar>
        <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar"
                   Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" Minimum="0"
                   Orientation="Horizontal" Grid.Row="1"
                   Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}"
                   ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
      </Grid>
    </ControlTemplate>
  </FrameworkElement.Resources>
</ComboBox>