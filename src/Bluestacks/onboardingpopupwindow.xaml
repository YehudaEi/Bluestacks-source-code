<Common:CustomWindow x:Class="BlueStacks.BlueStacksUI.OnBoardingPopupWindow"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:local="clr-namespace:BlueStacks.BlueStacksUI"
                     xmlns:Common="clr-namespace:BlueStacks.Common;assembly=HD-Common"
                     Loaded="CustomWindow_Loaded" KeyDown="CustomWindow_KeyDown" ShowInTaskbar="false"
                     WindowStyle="None" ResizeMode="NoResize" AllowsTransparency="true" Background="Transparent"
                     Width="348" Height="Auto" SizeToContent="Height"
                     DataContext="{Binding RelativeSource={RelativeSource Self}}">
  <FrameworkElement.Resources>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <Common:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>
    <Common:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter"/>
  </FrameworkElement.Resources>
  <Border Style="{StaticResource ShadowBorder}">
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="8"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="8"/>
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="8"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="8"/>
      </Grid.ColumnDefinitions>
      <Border Style="{StaticResource OuterBorder}" Grid.Row="1" Grid.Column="1"
              Background="{Binding ColorModel.[BlueMouseOutGridBackGround], Source={Static Common:BlueStacksUIBinding.Instance}}"
              BorderBrush="{Binding ColorModel.[BlueMouseOutBorderBackground], Source={Static Common:BlueStacksUIBinding.Instance}}">
        <Grid>
          <UIElement.OpacityMask>
            <VisualBrush Stretch="None" Visual="{Binding ElementName=mMaskBorder}"/>
          </UIElement.OpacityMask>
          <Border x:Name="mMaskBorder" Style="{StaticResource MaskBorder}"
                  Background="{Binding ColorModel.[BlueMouseOutGridBackGround], Source={Static Common:BlueStacksUIBinding.Instance}}"/>
          <Grid x:Name="ContentGrid">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="20"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="20"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="14"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="20"/>
            </Grid.RowDefinitions>
            <TextBlock Name="headerTextBlock" Grid.Row="1" Grid.Column="1" TextWrapping="WrapWithOverflow" MaxWidth="230"
                       Margin="0,0,0,6" FontSize="18" HorizontalAlignment="Left" FontWeight="Bold"
                       Text="{Binding HeaderContent}"
                       Foreground="{Binding ColorModel.[BlueMouseOutForeGround], Source={Static Common:BlueStacksUIBinding.Instance}}"/>
            <TextBlock Name="bodyTextBlock" Grid.Row="2" Grid.Column="1" TextWrapping="WrapWithOverflow" MaxWidth="230"
                       HorizontalAlignment="Left" Margin="0,0,0,14" FontSize="16" Text="{Binding BodyContent}"
                       Foreground="{Binding ColorModel.[BlueMouseOutForeGround], Source={Static Common:BlueStacksUIBinding.Instance}}"/>
            <local:BlurbMessageControl x:Name="bodyContentBlurbControl" Grid.Row="2" Grid.Column="1" MaxWidth="230" Visibility="Collapsed"
                                       Margin="0,-6,0,14"/>
            <Grid Row="3" Column="1">
              <Common:CustomButton Click="OnBoardingPopupNext_Click" x:Name="OkayButton" ButtonColor="BackgroundWhiteBorder"
                                   BorderThickness="1.5" Height="36" FontSize="16" Margin="0,0,10,0" MinWidth="70"
                                   HorizontalAlignment="Left" Cursor="Hand"
                                   Visibility="{Binding IsLastPopup, Converter={StaticResource BooleanToVisibilityConverter}}"
                                   Content="{Binding Path=LocaleModel.[STRING_OKAY], Source={Static Common:BlueStacksUIBinding.Instance}, FallbackValue=Okay}"/>
              <Common:CustomButton Click="OnBoardingPopupNext_Click" ButtonColor="BackgroundWhiteBorder" BorderThickness="1.5"
                                   Height="36" FontSize="16" MinWidth="70" Margin="0,0,10,0" HorizontalAlignment="Left" Cursor="Hand"
                                   Visibility="{Binding IsLastPopup, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
                                   Content="{Binding Path=LocaleModel.[STRING_NEXT], Source={Static Common:BlueStacksUIBinding.Instance}, FallbackValue=Next}"/>
            </Grid>
          </Grid>
        </Grid>
      </Border>
      <Grid Row="1" Column="0"
            Visibility="{Binding PopArrowAlignment, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={Static Common:PopupArrowAlignment.Left}}">
        <Path Data="M 8,0 L 0,8 8,16 " Margin="-1,0,0,0" VerticalAlignment="Center"
              Stroke="{Binding ColorModel.[BlueMouseOutGridBackGround], Source={Static Common:BlueStacksUIBinding.Instance}}"
              Fill="{Binding ColorModel.[BlueMouseOutGridBackGround], Source={Static Common:BlueStacksUIBinding.Instance}}"/>
      </Grid>
      <Grid Row="0" Column="1"
            Visibility="{Binding PopArrowAlignment, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={Static Common:PopupArrowAlignment.Top}}">
        <Path Data="M 0,8 L 8,0 16,8 " Margin="-1,0,0,0" HorizontalAlignment="Center"
              Stroke="{Binding ColorModel.[BlueMouseOutGridBackGround], Source={Static Common:BlueStacksUIBinding.Instance}}"
              Fill="{Binding ColorModel.[BlueMouseOutGridBackGround], Source={Static Common:BlueStacksUIBinding.Instance}}"/>
      </Grid>
      <Grid Row="1" Column="2"
            Visibility="{Binding PopArrowAlignment, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={Static Common:PopupArrowAlignment.Right}}">
        <Path x:Name="RightArrow" Data="M 0,0 L 8,8 0,16 " Margin="-1,0,0,0" VerticalAlignment="Center"
              Stroke="{Binding ColorModel.[BlueMouseOutGridBackGround], Source={Static Common:BlueStacksUIBinding.Instance}}"
              Fill="{Binding ColorModel.[BlueMouseOutGridBackGround], Source={Static Common:BlueStacksUIBinding.Instance}}"/>
      </Grid>
      <Grid Row="2" Column="1"
            Visibility="{Binding PopArrowAlignment, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={Static Common:PopupArrowAlignment.Bottom}}">
        <Path Data="M 0,0 L 8,8 16,0 " Margin="-1,0,0,0" HorizontalAlignment="Center"
              Stroke="{Binding ColorModel.[BlueMouseOutGridBackGround], Source={Static Common:BlueStacksUIBinding.Instance}}"
              Fill="{Binding ColorModel.[BlueMouseOutGridBackGround], Source={Static Common:BlueStacksUIBinding.Instance}}"/>
      </Grid>
    </Grid>
  </Border>
</Common:CustomWindow>