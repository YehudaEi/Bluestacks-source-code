<UserControl x:Class="BlueStacks.BlueStacksUI.SchemeComboBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:BlueStacks.BlueStacksUI"
             xmlns:Common="clr-namespace:BlueStacks.Common;assembly=HD-Common"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
             x:Name="_this" DataContext="{Binding Source={Static Common:BlueStacksUIBinding.Instance}}">
  <FrameworkElement.Resources>
    <Style x:Key="LineStyle" TargetType="{Type Separator}">
      <Setter Property="FrameworkElement.Margin" Value="12,0,12,0"/>
      <Setter Property="UIElement.Opacity" Value="0.6"/>
      <Setter Property="Control.Background" Value="{Binding Path=ColorModel.[HorizontalSeparator]}"/>
    </Style>
    <Style x:Key="CenteredVerticalOffsetStyle" TargetType="{Type Popup}">
      <Setter Property="Popup.VerticalOffset">
        <Setter.Value>
          <MultiBinding Converter="{Common:CenterToolTipConverter}">
            <Binding Path="PlacementTarget.ActualHeight" RelativeSource="{RelativeSource Self}"/>
            <Binding Path="Child.ActualHeight" RelativeSource="{RelativeSource Self}"/>
          </MultiBinding>
        </Setter.Value>
      </Setter>
    </Style>
    <Common:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
  </FrameworkElement.Resources>
  <Border BorderThickness="1" BorderBrush="{Binding Path=ColorModel.[ComboBoxBorderColor]}"
          Background="{Binding Path=ColorModel.[ComboBoxBackgroundColor]}">
    <Grid Name="mGrid">
      <Grid.RowDefinitions>
        <RowDefinition Height="32"/>
        <RowDefinition MaxHeight="200"/>
      </Grid.RowDefinitions>
      <ToggleButton x:Name="TogglePopupButton" HorizontalContentAlignment="Stretch" Background="Transparent"
                    BorderThickness="0" BorderBrush="{Binding Path=ColorModel.[ComboBoxBorderColor]}"
                    IsHitTestVisible="{Binding ElementName=mItems, Path=IsOpen, Converter={StaticResource InverseBooleanConverter}}">
        <FrameworkElement.Style>
          <Style TargetType="{Type ToggleButton}">
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="{Type ToggleButton}">
                  <Border x:Name="border" Background="{TemplateBinding Control.Background}"
                          BorderThickness="{TemplateBinding Control.BorderThickness}"
                          BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="true">
                    <ContentPresenter x:Name="contentPresenter" Focusable="false"
                                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                  </Border>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </FrameworkElement.Style>
        <Grid Row="0">
          <Panel.Background>
            <SolidColorBrush Color="Transparent" Opacity="0.2"/>
          </Panel.Background>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
          </Grid.ColumnDefinitions>
          <TextBlock Name="mName" Grid.Column="0" VerticalAlignment="Center" Height="24" FontSize="14"
                     Margin="16,10,16,4" Text="{Binding ElementName=_this, Path=SelectedItem}"
                     Foreground="{Binding Path=ColorModel.[ComboBoxForegroundColor]}"/>
          <Path x:Name="Arrow" Grid.Column="1" Data="M 0,0 L 6,7.5 12,0 Z" HorizontalAlignment="Center"
                Margin="16,10" VerticalAlignment="Center"
                Fill="{Binding Path=ColorModel.[ComboBoxForegroundColor]}"/>
        </Grid>
      </ToggleButton>
      <local:CustomPopUp x:Name="mItems" HorizontalOffset="-1" StaysOpen="false"
                         IsOpen="{Binding IsChecked, ElementName=TogglePopupButton, Mode=TwoWay}"
                         PlacementTarget="{Binding ElementName=TogglePopupButton}"
                         Width="{Binding ElementName=_this, Path=ActualWidth}">
        <Border BorderThickness="1" Background="{Binding Path=ColorModel.[ComboBoxBackgroundColor]}"
                BorderBrush="{Binding Path=ColorModel.[ComboBoxBorderColor]}">
          <Grid Row="1">
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="36"/>
            </Grid.RowDefinitions>
            <ScrollViewer x:Name="mSchemesListScrollbar" Grid.Row="0" VerticalScrollBarVisibility="Auto"
                          HorizontalScrollBarVisibility="Disabled" MaxHeight="220" Width="Auto">
              <StackPanel Name="Items" Background="{Binding Path=ColorModel.[ComboBoxBackgroundColor]}"/>
            </ScrollViewer>
            <Separator Grid.Row="1" Style="{StaticResource LineStyle}"/>
            <Grid MouseDown="NewProfile_MouseDown" MouseEnter="NewProfile_MouseEnter"
                  MouseLeave="NewProfile_MouseLeave" Name="NewProfile" Row="2" VerticalAlignment="Stretch"
                  Background="{Binding Path=ColorModel.[ComboBoxBackgroundColor]}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="13"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Common:CustomPictureBox Grid.Column="1" VerticalAlignment="Stretch" ImageName="new" Height="14" Width="14"/>
              <TextBlock Grid.Column="3" TextAlignment="Left" Margin="0,4,0,0" VerticalAlignment="Stretch" FontWeight="Bold"
                         FontSize="14" Width="Auto" Height="24"
                         Text="{Binding Path=LocaleModel.[STRING_NEW_PROFILE], FallbackValue='New scheme'}"
                         Foreground="{Binding Path=ColorModel.[ContextMenuItemForegroundColor], FallbackValue=White}"/>
            </Grid>
          </Grid>
        </Border>
      </local:CustomPopUp>
    </Grid>
  </Border>
</UserControl>