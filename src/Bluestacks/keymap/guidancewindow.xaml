<Common:CustomWindow x:Class="BlueStacks.BlueStacksUI.GuidanceWindow"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:local="clr-namespace:BlueStacks.BlueStacksUI"
                     xmlns:Common="clr-namespace:BlueStacks.Common;assembly=HD-Common"
                     StateChanged="CustomWindow_StateChanged" Closing="GuidanceWindow_Closing"
                     Closed="GuidanceWindow_Closed" Loaded="GuidanceWindow_Loaded" KeyDown="GuidanceWindow_KeyDown"
                     IsVisibleChanged="GuidanceWindow_IsVisibleChanged" Activated="GuidanceWindow_Activated"
                     Deactivated="GuidanceWindow_Deactivated" ShowInTaskbar="false" WindowStyle="None"
                     ResizeMode="NoResize" AllowsTransparency="true" Title="Guidance Window" Background="Transparent"
                     MinWidth="280" MaxWidth="280" MinHeight="190"
                     DataContext="{Binding Source={Static Common:BlueStacksUIBinding.Instance}}">
  <FrameworkElement.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HD-Common;component/UIElements/CustomBorderStyle.xaml"/>
      </ResourceDictionary.MergedDictionaries>
      <Common:TextInputValidityToVisibilityConverter x:Key="textInputValidityToVisibilityConverter"/>
      <local:GuidanceDataTemplateSelector x:Key="guidanceDataTemplateSelector"/>
      <Style x:Key="CenteredHorizontalOffsetStyle" TargetType="{Type Popup}">
        <Setter Property="Popup.HorizontalOffset">
          <Setter.Value>
            <MultiBinding Converter="{Common:CenterToolTipConverter}">
              <Binding Path="PlacementTarget.ActualWidth" RelativeSource="{RelativeSource Self}"/>
              <Binding Path="Child.ActualWidth" RelativeSource="{RelativeSource Self}"/>
            </MultiBinding>
          </Setter.Value>
        </Setter>
        <Setter Property="Popup.VerticalOffset">
          <Setter.Value>
            <MultiBinding Converter="{Common:CenterToolTipConverter}">
              <Binding Path="PlacementTarget.ActualHeight" RelativeSource="{RelativeSource Self}"/>
              <Binding Path="Child.ActualHeight" RelativeSource="{RelativeSource Self}"/>
            </MultiBinding>
          </Setter.Value>
        </Setter>
      </Style>
      <ControlTemplate x:Key="IMapToolTipTInfoemplate" TargetType="{Type ToolTip}">
        <TextBlock TextWrapping="WrapWithOverflow" FontWeight="Normal" Text="{Binding Text}"/>
      </ControlTemplate>
      <Common:ListToStringConverter x:Key="listToStringConverter"/>
      <local:GuidanceListToStringConverter x:Key="guidanceListToStringConverter"/>
      <Style x:Key="TextBlockStyle" TargetType="{Type TextBlock}">
        <Setter Property="TextBlock.Foreground"
                Value="{Binding Path=ColorModel.[SettingsWindowTabMenuItemLegendForeground], Source={Static Common:BlueStacksUIBinding.Instance}}"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
        <Setter Property="TextBlock.FontSize" Value="12"/>
        <Setter Property="TextBlock.Padding" Value="0,4,0,4"/>
      </Style>
      <Style x:Key="ListItemTextStyle" TargetType="{Type TextBlock}" BasedOn="{StaticResource TextBlockStyle}">
        <Setter Property="TextBlock.Foreground"
                Value="{Binding Path=ColorModel.[SettingsWindowForegroundDimColor], Source={Static Common:BlueStacksUIBinding.Instance}}"/>
      </Style>
      <Style x:Key="ListCategoryTextStyle" TargetType="{Type TextBlock}"
             BasedOn="{StaticResource TextBlockStyle}">
        <Setter Property="FrameworkElement.MinHeight" Value="25"/>
        <Setter Property="TextBlock.FontWeight" Value="Bold"/>
        <Setter Property="TextBlock.Padding" Value="5,3,5,3"/>
        <Setter Property="FrameworkElement.Margin" Value="0"/>
        <Setter Property="TextBlock.Background"
                Value="{Binding Path=ColorModel.[HorizontalSeparator], Source={Static Common:BlueStacksUIBinding.Instance}}"/>
      </Style>
      <Style TargetType="{Type ListBox}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{Null}"/>
        <Setter Property="Control.Padding" Value="0"/>
        <Setter Property="FrameworkElement.Margin" Value="0"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="Control.Background" Value="Transparent"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
      </Style>
      <ControlTemplate x:Key="ItemPresenterTemplate" TargetType="{Type ListBox}">
        <ItemsPresenter/>
      </ControlTemplate>
      <Style TargetType="{Type ListBoxItem}">
        <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Control.Padding" Value="0"/>
        <Setter Property="FrameworkElement.Margin" Value="0"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="Control.Background" Value="Transparent"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{Type ListBoxItem}">
              <Border x:Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}"
                      SnapsToDevicePixels="true">
                <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Style.Triggers>
          <Trigger Property="ItemsControl.AlternationIndex" Value="0">
            <Setter Property="Control.Background"
                    Value="{Binding Path=ColorModel.[LightBandingColor], Source={Static Common:BlueStacksUIBinding.Instance}}"/>
          </Trigger>
          <Trigger Property="ItemsControl.AlternationIndex" Value="1">
            <Setter Property="Control.Background"
                    Value="{Binding Path=ColorModel.[DarkBandingColor], Source={Static Common:BlueStacksUIBinding.Instance}}"/>
          </Trigger>
        </Style.Triggers>
      </Style>
      <DataTemplate x:Key="GuidanceViewModelTemplate" DataType="{Type local:GuidanceViewModel}">
        <Grid MinHeight="30" Margin="5,0,5,0">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="145"/>
            <ColumnDefinition Width="*" MinWidth="10"/>
            <ColumnDefinition Width="80"/>
          </Grid.ColumnDefinitions>
          <TextBlock Grid.Column="0" Style="{StaticResource ListItemTextStyle}"
                     Text="{Binding GuidanceTexts, Converter={StaticResource listToStringConverter}}"/>
          <TextBlock Grid.Column="2" Style="{StaticResource TextBlockStyle}"
                     Text="{Binding GuidanceKeys, Converter={StaticResource guidanceListToStringConverter}}"/>
        </Grid>
      </DataTemplate>
      <DataTemplate x:Key="GuidanceEditTextModelTemplate" DataType="{Type local:GuidanceEditTextModel}">
        <Grid MinHeight="30" Margin="5,0,5,0">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="145"/>
            <ColumnDefinition Width="*" MinWidth="10"/>
            <ColumnDefinition Width="80"/>
          </Grid.ColumnDefinitions>
          <TextBlock Grid.Column="0" Style="{StaticResource ListItemTextStyle}" Text="{Binding GuidanceText}"/>
          <local:IMapTextBox x:Name="imapText" TextChanged="GuidanceKeyTextChanged" TextWrapping="Wrap" SelectAllOnStart="false"
                             Grid.Column="2" VerticalAlignment="Center" ToolTipService.InitialShowDelay="0" FontSize="12"
                             Padding="1" Tag="{Binding GuidanceKey, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                             PropertyType="{Binding PropertyType}" IsEnabled="{Binding IsEnabled}"
                             ActionType="{Binding ActionType}"
                             InputTextValidity="{Binding TextValidityOption, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
            <local:IMapTextBox.IMActionItems>
              <Binding>                <!-- constructor argument:
                     IMActionItems
                -->

              </Binding>
            </local:IMapTextBox.IMActionItems>
            <FrameworkElement.ToolTip>
              <ToolTip HasDropShadow="true" HorizontalOffset="-30" BorderThickness="0" Background="Transparent"
                       Placement="Top" Style="{Null}"
                       Visibility="{Binding TextValidityOption, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Converter={StaticResource textInputValidityToVisibilityConverter}}">
                <StackPanel DataContext="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType={Type ToolTip}}}">
                  <Border Style="{StaticResource ShadowBorderForPopup}" MaxWidth="135"
                          Visibility="{Binding InputTextValidity, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Converter={StaticResource textInputValidityToVisibilityConverter}, ConverterParameter={Static Common:TextValidityOptions.Warning}}">
                    <StackPanel>
                      <Border Style="{StaticResource OuterBorder}"
                              BorderBrush="{Binding Path=ColorModel.[TextBoxWarningBorderColor], Source={Static Common:BlueStacksUIBinding.Instance}}">
                        <TextBlock Padding="5" TextWrapping="WrapWithOverflow" FontWeight="Normal"
                                   Foreground="{Binding Path=ColorModel.[TextBoxFocussedForegroundColor], Source={Static Common:BlueStacksUIBinding.Instance}}"
                                   Background="{Binding Path=ColorModel.[TextBoxFocussedBackgroundColor], Source={Static Common:BlueStacksUIBinding.Instance}}"
                                   Text="{Binding Path=LocaleModel.[STRING_DUPLICATE_KEY_WARNING], FallbackValue='This key is already assigned to a different action but you may now use it for both.'}"/>
                      </Border>
                      <Path Grid.Row="1" Data="M 0,0 L 8,10 16,0 " Margin="0,-1,0,0" HorizontalAlignment="Center"
                            Stroke="{Binding Path=ColorModel.[TextBoxWarningBorderColor], Source={Static Common:BlueStacksUIBinding.Instance}}"
                            Fill="{Binding Path=ColorModel.[ContextMenuItemBackgroundColor], Source={Static Common:BlueStacksUIBinding.Instance}}"/>
                    </StackPanel>
                  </Border>
                  <Border Style="{StaticResource ShadowBorderForPopup}"
                          Visibility="{Binding InputTextValidity, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Converter={StaticResource textInputValidityToVisibilityConverter}, ConverterParameter={Static Common:TextValidityOptions.Info}}">
                    <Border Style="{StaticResource OuterBorder}">
                      <TextBlock Margin="5,2.5,5,2.5" Text="{Binding Text}"
                                 Foreground="{Binding Path=ColorModel.[TextBoxFocussedForegroundColor], Source={Static Common:BlueStacksUIBinding.Instance}}"/>
                    </Border>
                  </Border>
                </StackPanel>
              </ToolTip>
            </FrameworkElement.ToolTip>
          </local:IMapTextBox>
        </Grid>
      </DataTemplate>
      <DataTemplate x:Key="GuidanceEditDecimalModelTemplate" DataType="{Type local:GuidanceEditDecimalModel}">
        <Grid MinHeight="30" Margin="5,0,5,0">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="145"/>
            <ColumnDefinition Width="*" MinWidth="10"/>
            <ColumnDefinition Width="80"/>
          </Grid.ColumnDefinitions>
          <TextBlock Padding="0,4,0,4" Grid.Column="0" Style="{StaticResource ListItemTextStyle}"
                     Text="{Binding GuidanceText}"/>
          <local:StepperTextBox TextChanged="StepperTextChanged" SelectAllOnStart="false" Grid.Column="2"
                                VerticalAlignment="Center" FontSize="12" Padding="1" MinValue="0.00"
                                Text="{Binding GuidanceKey, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                PropertyType="{Binding PropertyType}" MaxValue="{Binding MaxValue}">
            <local:StepperTextBox.IMActionItems>
              <Binding>                <!-- constructor argument:
                     IMActionItems
                -->

              </Binding>
            </local:StepperTextBox.IMActionItems>
          </local:StepperTextBox>
        </Grid>
      </DataTemplate>
      <DataTemplate x:Key="GuidanceCategoryViewModelTemplate" DataType="{Type local:GuidanceCategoryViewModel}">
        <Border BorderThickness="1,0,1,1" Margin="0,7.5,0,0"
                BorderBrush="{Binding Path=ColorModel.[HorizontalSeparator], Source={Static Common:BlueStacksUIBinding.Instance}}">
          <StackPanel>
            <TextBlock Grid.Column="0" Style="{StaticResource ListCategoryTextStyle}" Text="{Binding Category}"/>
            <ListBox AlternationCount="2" Template="{StaticResource ItemPresenterTemplate}"
                     ItemTemplate="{StaticResource GuidanceViewModelTemplate}"
                     ItemsSource="{Binding GuidanceViewModels}"/>
          </StackPanel>
        </Border>
      </DataTemplate>
      <DataTemplate x:Key="GuidanceCategoryEditModelTemplate" DataType="{Type local:GuidanceCategoryEditModel}">
        <Border BorderThickness="1,0,1,1" Margin="0,7.5,0,0"
                BorderBrush="{Binding Path=ColorModel.[HorizontalSeparator], Source={Static Common:BlueStacksUIBinding.Instance}}">
          <StackPanel>
            <TextBlock Grid.Column="0" Style="{StaticResource ListCategoryTextStyle}" TextWrapping="WrapWithOverflow"
                       Text="{Binding Category}"/>
            <ListBox Template="{StaticResource ItemPresenterTemplate}" AlternationCount="2"
                     ItemTemplateSelector="{StaticResource guidanceDataTemplateSelector}"
                     ItemsSource="{Binding GuidanceEditModels}"/>
          </StackPanel>
        </Border>
      </DataTemplate>
    </ResourceDictionary>
  </FrameworkElement.Resources>
  <Grid x:Name="mGuidanceMainGrid">
    <Border x:Name="mGameControlBorder" BorderThickness="1"
            BorderBrush="{Binding Path=ColorModel.[PopupBorderBrush]}"
            Background="{Binding Path=ColorModel.[SettingsWindowBackground]}">
      <Grid Margin="7.5,0,7.5,7.5">
        <Grid.RowDefinitions>
          <RowDefinition Height="40"/>
          <RowDefinition Height="1"/>
          <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <DockPanel MouseLeftButtonDown="Grid_MouseLeftButtonDown" x:Name="mHeaderGrid" LastChildFill="true"
                   Grid.Row="0" Background="Transparent">
          <Grid MouseLeftButtonUp="ControlsTabMouseLeftButtonUp" x:Name="mControlsTab" DockPanel.Dock="Left"
                Background="Transparent">
            <TextBlock x:Name="mControlsTabTextBlock" FontSize="14" Padding="2,0,16,0" HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Text="{Binding Path=LocaleModel.[STRING_CONTROLS], FallbackValue=Controls}"
                       Foreground="{Binding Path=ColorModel.[SettingsWindowTabMenuItemLegendForeground]}"/>
          </Grid>
          <Grid x:Name="mEditKeysGrid" DockPanel.Dock="Left" Background="Transparent" Visibility="Visible">
            <TextBlock x:Name="mEditKeysGridTextBlock" FontSize="14" HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Text="{Binding Path=LocaleModel.[STRING_GUIDANCE_EDIT_KEYS], FallbackValue='Edit keys'}"
                       Foreground="{Binding Path=ColorModel.[SettingsWindowTabMenuItemLegendForeground]}"/>
          </Grid>
          <Grid DockPanel.Dock="Right">
            <Common:CustomPictureBox MouseDown="CustomPictureBox_MouseDown" MouseLeftButtonUp="CloseButton_MouseLeftButtonUp"
                                     x:Name="mCloseSideBarWindow" Grid.Column="2" Margin="0,0,2,0" ImageName="close"
                                     HorizontalAlignment="Right" Height="16" Width="16" VerticalAlignment="Center"
                                     ToolTip="{Binding Path=LocaleModel.[STRING_CLOSE]}"/>
          </Grid>
        </DockPanel>
        <Grid Row="1" VerticalAlignment="Bottom" Height="1" Opacity="0.6" Margin="0,0,0,0"
              Background="{Binding Path=ColorModel.[HorizontalSeparator]}"/>
        <Grid x:Name="mControlsGrid" Row="2" Margin="0,7.5,0,0">
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="36"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>
          <StackPanel x:Name="mSchemePanel">
            <TextBlock x:Name="mSchemeTextBlock" Margin="0,0,0,7.5"
                       Text="{Binding Path=LocaleModel.[STRING_SCHEME], FallbackValue=Scheme}"
                       Foreground="{Binding Path=ColorModel.[SettingsWindowTabMenuItemLegendForeground]}"/>
            <Common:CustomComboBox SelectionChanged="ProfileComboBox_ProfileChanged" x:Name="mSchemesComboBox" Grid.Row="1"
                                   SelectedValuePath="Content" Height="26" FontSize="14" Margin="0,0,0,7.5"
                                   HorizontalAlignment="Stretch" MaxDropDownHeight="200"/>
          </StackPanel>
          <Border x:Name="mVideoBorder" Grid.Row="1" Margin="0,0,0,7.5" Visibility="Collapsed" BorderThickness="0"
                  BorderBrush="{Binding ColorModel.[BlueMouseOutGridBackGround], Source={Static Common:BlueStacksUIBinding.Instance}}">
            <Grid MouseUp="CustomPictureBox_MouseUp" Height="150">
              <Common:CustomPictureBox x:Name="mVideoThumbnail" Stretch="Fill"/>
              <TextBlock TextTrimming="CharacterEllipsis" VerticalAlignment="Bottom" FontSize="14" FontWeight="SemiBold"
                         Padding="12,8,80,8"
                         ToolTipService.ToolTip="{Binding RelativeSource={RelativeSource self}, Path=Text}"
                         Text="{Binding Path=LocaleModel.[STRING_HOW_TO_PLAY_ON_BLUESTACKS], FallbackValue='How to play on Bluestacks'}"
                         Foreground="{Binding Path=ColorModel.[SettingsWindowTitleBarForeGround]}"
                         Background="{Binding Path=ColorModel.[GuidanceVideoDescriptionColor]}"/>
              <Common:CustomPictureBox Margin="0,0,20,20" VerticalAlignment="Bottom" HorizontalAlignment="Right" Height="50" Width="50"
                                       ImageName="playvideo_icon"/>
            </Grid>
          </Border>
          <Border x:Name="mHowToPlayGrid" Visibility="Collapsed" Grid.Row="1" BorderThickness="0,1,0,1"
                  BorderBrush="{Binding Path=ColorModel.[HorizontalSeparator], Source={Static Common:BlueStacksUIBinding.Instance}}">
            <StackPanel Orientation="Vertical">
              <Grid MouseUp="HowToPlay_MouseUp" Margin="0,8,0,8" Background="Transparent">
                <TextBlock TextTrimming="CharacterEllipsis" VerticalAlignment="Center" HorizontalAlignment="Left"
                           FontSize="14" FontWeight="SemiBold"
                           ToolTipService.ToolTip="{Binding RelativeSource={RelativeSource self}, Path=Text}"
                           Text="{Binding Path=LocaleModel.[STRING_HOW_TO_PLAY], FallbackValue='HOW TO PLAY'}"
                           Foreground="{Binding Path=ColorModel.[SettingsWindowTabMenuItemLegendForeground]}"/>
                <Common:CustomPictureBox x:Name="mHowToPlayCollapseExpand" Height="16" Width="16" Margin="12,0,0,0"
                                         HorizontalAlignment="Right" VerticalAlignment="Center" ImageName="outline_settings_collapse"/>
              </Grid>
              <Border MouseUp="QuickLearnBorder_MouseUp" x:Name="mQuickLearnBorder" Visibility="Collapsed"
                      Margin="0,0,0,8" BorderThickness="0" Height="40"
                      BorderBrush="{Binding ColorModel.[BlueMouseOutGridBackGround], Source={Static Common:BlueStacksUIBinding.Instance}}"
                      Background="{Binding Path=ColorModel.[GuidanceVideoDescriptionColor]}">
                <StackPanel Margin="12,8,12,8" Orientation="Horizontal">
                  <Common:CustomPictureBox Margin="0,0,12,0" Height="24" Width="24" ImageName="guidance_quicklearn"/>
                  <TextBlock TextTrimming="CharacterEllipsis" VerticalAlignment="Center" FontSize="14"
                             ToolTipService.ToolTip="{Binding RelativeSource={RelativeSource self}, Path=Text}"
                             Text="{Binding Path=LocaleModel.[STRING_QUICKLY_LEARN], FallbackValue='Quickly learn'}"
                             Foreground="{Binding Path=ColorModel.[SettingsWindowTitleBarForeGround]}"/>
                </StackPanel>
              </Border>
              <Border MouseUp="CustomPictureBox_MouseUp" x:Name="mVideoTutorialBorder" Margin="0,0,0,8"
                      Visibility="Collapsed" BorderThickness="0" Height="40"
                      BorderBrush="{Binding ColorModel.[BlueMouseOutGridBackGround], Source={Static Common:BlueStacksUIBinding.Instance}}"
                      Background="{Binding Path=ColorModel.[HorizontalSeparator]}">
                <StackPanel Margin="12,8,12,8" Orientation="Horizontal">
                  <Common:CustomPictureBox Margin="0,0,12,0" Height="24" Width="24" ImageName="guidance_watchvideo"/>
                  <TextBlock TextTrimming="CharacterEllipsis" VerticalAlignment="Center" FontSize="14"
                             ToolTipService.ToolTip="{Binding RelativeSource={RelativeSource self}, Path=Text}"
                             Text="{Binding Path=LocaleModel.[STRING_WATCH_TUTORIAL_VIDEO], FallbackValue='Watch tutorial video'}"
                             Foreground="{Binding Path=ColorModel.[SettingsWindowTabMenuItemLegendForeground]}"/>
                </StackPanel>
              </Border>
              <Border MouseUp="ReadMoreLinkMouseLeftButtonUp" x:Name="mReadArticleBorder" Visibility="Collapsed"
                      Margin="0,0,0,8" Background="Transparent" BorderThickness="0" Height="32"
                      BorderBrush="{Binding ColorModel.[BlueMouseOutGridBackGround], Source={Static Common:BlueStacksUIBinding.Instance}}">
                <StackPanel Margin="12,4,12,4" Orientation="Horizontal">
                  <Common:CustomPictureBox Margin="0,0,12,0" Height="24" Width="24" ImageName="guidance_readarticle"/>
                  <TextBlock TextTrimming="CharacterEllipsis" VerticalAlignment="Center" FontSize="14"
                             ToolTipService.ToolTip="{Binding RelativeSource={RelativeSource self}, Path=Text}"
                             Text="{Binding Path=LocaleModel.[STRING_READ_SUPPORT_ARTICLE], FallbackValue='Read support article'}"
                             Foreground="{Binding Path=ColorModel.[SettingsWindowTabMenuItemLegendForeground]}"/>
                </StackPanel>
              </Border>
            </StackPanel>
          </Border>
          <DockPanel x:Name="mKeysIconGrid" Grid.Row="2" LastChildFill="true">
            <Grid x:Name="mKeyboardIcon" Width="32" DockPanel.Dock="Left">
              <Common:CustomPictureBox PreviewMouseLeftButtonUp="KeyboardIconPreviewMouseLeftButtonUp" x:Name="mKeyboardIconImage"
                                       Width="16" Height="16" ImageName="guidance_controls" VerticalAlignment="Center"
                                       HorizontalAlignment="Center"/>
              <Grid x:Name="mKeyboardIconSeparator" VerticalAlignment="Bottom" Height="2"
                    Background="{Binding Path=ColorModel.[SettingsWindowTabMenuItemUnderline]}"/>
            </Grid>
            <Grid x:Name="mGamepadIcon" Width="32" DockPanel.Dock="Left">
              <Common:CustomPictureBox PreviewMouseLeftButtonUp="GamepadIconPreviewMouseLeftButtonUp" x:Name="mGamepadIconImage"
                                       Width="16" Height="16" ImageName="gamepad_overlay_icon" VerticalAlignment="Center"
                                       HorizontalAlignment="Center"/>
              <Grid x:Name="mGamepadIconSeparator" VerticalAlignment="Bottom" Height="2"
                    Background="{Binding Path=ColorModel.[HorizontalSeparator]}"/>
            </Grid>
            <Grid DockPanel.Dock="Right">
              <StackPanel x:Name="mReadArticlePanel" Visibility="Collapsed" Orientation="Horizontal">
                <TextBlock VerticalAlignment="Center" FontSize="12"
                           Foreground="{Binding Path=ColorModel.[SettingsWindowForegroundDimColor]}">
                  <Hyperlink Style="{StaticResource HyperlinkStyle}">
                    <TextBlock MouseLeftButtonDown="ReadMoreLinkMouseLeftButtonUp"
                               Text="{Binding Path=LocaleModel.[STRING_READ_ARTICLE], FallbackValue='Read article'}"/>
                  </Hyperlink>
                </TextBlock>
                <Common:CustomPictureBox MouseLeftButtonDown="ReadMoreLinkMouseLeftButtonUp" Width="12" Height="12"
                                         VerticalAlignment="Center" ImageName="external_link" Margin="4,0,0,0"/>
              </StackPanel>
              <Grid VerticalAlignment="Bottom" Height="1" Background="{Binding Path=ColorModel.[HorizontalSeparator]}"/>
            </Grid>
            <Grid x:Name="separator" VerticalAlignment="Bottom" Height="1"
                  Background="{Binding Path=ColorModel.[HorizontalSeparator]}"/>
          </DockPanel>
          <Border Name="mGuidanceKeyBorder" Grid.Row="3" BorderThickness="0"
                  BorderBrush="{Binding ColorModel.[BlueMouseOutGridBackGround], Source={Static Common:BlueStacksUIBinding.Instance}}">
            <Grid x:Name="mGuidanceKeysGrid" Row="3">
              <ListBox x:Name="mGuidanceListBox" Grid.Row="0" Grid.Column="0"
                       ScrollViewer.VerticalScrollBarVisibility="Auto"
                       ItemTemplateSelector="{StaticResource guidanceDataTemplateSelector}" Background="Transparent"
                       ItemsSource="{Binding}"/>
              <StackPanel x:Name="noGameGuidePanel" Orientation="Vertical" VerticalAlignment="Center" Visibility="Collapsed">
                <Common:CustomPictureBox ImageName="no_guidance" HorizontalAlignment="Center" Width="55" Margin="0,0,0,10"/>
                <TextBlock FontSize="16" TextTrimming="CharacterEllipsis" Padding="8" HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Text="{Binding Path=LocaleModel.[STRING_NO_GUIDE], FallbackValue='No game guide'}"
                           Foreground="{Binding Path=ColorModel.[SettingsWindowTabMenuItemLegendForeground]}"/>
                <TextBlock FontSize="14" TextWrapping="Wrap" Margin="10" TextAlignment="Center" HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Text="{Binding Path=LocaleModel.[STRING_USE_OVERLAY_SCHEME_GUIDE], FallbackValue='Use overlay controls for assistance or switch to a different scheme to view guidance.'}"
                           Foreground="{Binding Path=ColorModel.[SettingsWindowForegroundDimColor]}"/>
              </StackPanel>
            </Grid>
          </Border>
          <StackPanel Grid.Row="4">
            <Grid VerticalAlignment="Bottom" Height="1" Background="{Binding Path=ColorModel.[HorizontalSeparator]}"/>
            <DockPanel x:Name="mViewDock" Margin="0,7.5,0,0">
              <Common:CustomButton Click="EditBtn_Click" x:Name="mEditBtn" ButtonColor="Background" HorizontalAlignment="Right"
                                   Height="24" FontSize="12" IsForceTooltipRequired="true" DockPanel.Dock="Right"
                                   Content="{Binding Path=LocaleModel.[STRING_EDIT_KEYS], FallbackValue=Edit}"/>
              <Common:CustomButton Click="RevertBtn_Click" x:Name="mRevertBtn" ButtonColor="Background" HorizontalAlignment="Right"
                                   Height="24" FontSize="12" IsForceTooltipRequired="true" Margin="5,0,5,0"
                                   Content="{Binding Path=LocaleModel.[STRING_RESET], FallbackValue=Reset}"
                                   ToolTip="{Binding Path=LocaleModel.[STRING_RESET_TO_DEFAULT], FallbackValue='Revert to default'}"/>
            </DockPanel>
            <Grid x:Name="mEditDock" Margin="0,7.5,0,0" Visibility="Collapsed">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="7.5"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="7.5"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Common:CustomButton Click="DiscardBtn_Click" x:Name="mDiscardBtn" ButtonColor="White" HorizontalAlignment="Stretch"
                                   Height="24" FontSize="12" IsForceTooltipRequired="true" Grid.Column="2"
                                   Content="{Binding Path=LocaleModel.[STRING_Cancel], FallbackValue=Cancel}"
                                   ToolTip="{Binding Path=LocaleModel.[STRING_CANCEL_CHANGES], FallbackValue='Cancel changes'}"/>
              <Common:CustomButton Click="SaveBtn_Click" x:Name="mSaveBtn" Grid.Column="4" ButtonColor="Blue"
                                   HorizontalAlignment="Stretch" Height="24" FontSize="12" IsForceTooltipRequired="true"
                                   Content="{Binding Path=LocaleModel.[STRING_SAVE], FallbackValue=Save}"
                                   ToolTip="{Binding Path=LocaleModel.[STRING_SAVE_CHANGES], FallbackValue='Save changes'}"/>
            </Grid>
          </StackPanel>
        </Grid>
      </Grid>
    </Border>
    <Grid x:Name="mOverlayGrid" Row="0" Visibility="Collapsed">
      <Grid Background="{Binding Path=ColorModel.[DimOverlayColor]}">
        <UIElement.Effect>
          <BlurEffect Radius="0" KernelType="Gaussian"/>
        </UIElement.Effect>
      </Grid>
    </Grid>
  </Grid>
</Common:CustomWindow>