<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:BlueStacks.Common">
  <ControlTemplate x:Key="RoundButtonTemplate" TargetType="{x:Type RepeatButton}">
    <Grid>
      <Ellipse Name="PART_Ellipse" Width="5" Height="5" Stroke="Black"
               Fill="{Binding Path=ColorModel.[CustomSliderRoundButtonBrush], Source={x:Static local:BlueStacksUIBinding.Instance}}"/>
      <ContentPresenter Name="PART_ContentPresenter" ContentSource="Content" Margin="0,0,0,6" HorizontalAlignment="Center"
                        VerticalAlignment="Center" TextBlock.FontSize="18" TextBlock.FontWeight="Bold"
                        TextBlock.Foreground="{Binding Path=ColorModel.[CustomSliderForegroundColor], Source={x:Static local:BlueStacksUIBinding.Instance}}"/>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="true">
        <Setter TargetName="PART_Ellipse"
                Value="{Binding Path=ColorModel.[CustomSliderRoundButtonBrush], Source={x:Static local:BlueStacksUIBinding.Instance}}"
                Property="Shape.Fill"/>
        <Setter TargetName="PART_ContentPresenter"
                Value="{Binding Path=ColorModel.[CustomSliderForegroundColor], Source={x:Static local:BlueStacksUIBinding.Instance}}"
                Property="TextBlock.Foreground"/>
      </Trigger>
      <Trigger Property="ButtonBase.IsPressed" Value="true">
        <Setter TargetName="PART_Ellipse"
                Value="{Binding Path=ColorModel.[CustomSliderRoundButtonBrush], Source={x:Static local:BlueStacksUIBinding.Instance}}"
                Property="Shape.Fill"/>
        <Setter TargetName="PART_ContentPresenter"
                Value="{Binding Path=ColorModel.[CustomSliderForegroundColor], Source={x:Static local:BlueStacksUIBinding.Instance}}"
                Property="TextBlock.Foreground"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border Background="Transparent"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="RoundButtonStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.Template" Value="{StaticResource RoundButtonTemplate}"/>
  </Style>
  <Style x:Key="SliderThumb" TargetType="{x:Type Thumb}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Ellipse Height="16" Width="16"
                   Fill="{Binding Path=ColorModel.[CustomSliderThumbColor], Source={x:Static local:BlueStacksUIBinding.Instance}}"
                   Stroke="{Binding Path=ColorModel.[CustomSliderThumbBorderColor], Source={x:Static local:BlueStacksUIBinding.Instance}}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SliderTrackBackground" TargetType="{x:Type RepeatButton}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border BorderThickness="0" Background="Transparent" Height="{TemplateBinding FrameworkElement.Height}">
            <Border BorderThickness="0" Height="2"
                    Background="{Binding ColorModel.[SliderButtonColor], Source={x:Static local:BlueStacksUIBinding.Instance}}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SliderTrackBackground2" TargetType="{x:Type RepeatButton}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border BorderThickness="0" Background="Transparent" Height="{TemplateBinding FrameworkElement.Height}">
            <Border SnapsToDevicePixels="true" BorderThickness="0" Background="White" Height="2"
                    BorderBrush="{Binding ColorModel.[PopupBorderBrush], Source={x:Static local:BlueStacksUIBinding.Instance}}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="CustomSlider" TargetType="{x:Type Slider}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Slider}">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto" MinHeight="{TemplateBinding FrameworkElement.MinHeight}"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Border Name="PART_Border" BorderThickness="0.6" CornerRadius="4" Height="6" Grid.Row="1" Grid.Column="1"
                    Width="{TemplateBinding FrameworkElement.Width}" HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    BorderBrush="{Binding Path=ColorModel.[CustomSliderBrush], Source={x:Static local:BlueStacksUIBinding.Instance}}"/>
            <Track Name="PART_Track" HorizontalAlignment="Stretch" VerticalAlignment="Center" Grid.Row="1"
                   Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}">
              <Track.DecreaseRepeatButton>
                <RepeatButton Style="{StaticResource SliderTrackBackground}" Command="Slider.DecreaseLarge"
                              Height="{TemplateBinding FrameworkElement.Height}"/>
              </Track.DecreaseRepeatButton>
              <Track.Thumb>
                <Thumb Style="{StaticResource SliderThumb}"/>
              </Track.Thumb>
              <Track.IncreaseRepeatButton>
                <RepeatButton Style="{StaticResource SliderTrackBackground2}" Command="Slider.IncreaseLarge"
                              Height="{TemplateBinding FrameworkElement.Height}"/>
              </Track.IncreaseRepeatButton>
            </Track>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="PART_Track" Property="UIElement.Opacity" Value="0.4"/>
              <Setter TargetName="PART_Border" Property="UIElement.Opacity" Value="0.4"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="true">
              <Setter TargetName="PART_Track" Property="UIElement.Opacity" Value="1"/>
              <Setter TargetName="PART_Border" Property="UIElement.Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="Slider.Orientation" Value="Vertical">
              <Setter TargetName="PART_Border" Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
              <Setter TargetName="PART_Border" Property="FrameworkElement.VerticalAlignment" Value="Stretch"/>
              <Setter TargetName="PART_Track" Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
              <Setter TargetName="PART_Track" Property="FrameworkElement.VerticalAlignment" Value="Stretch"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>